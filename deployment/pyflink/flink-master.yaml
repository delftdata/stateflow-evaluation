apiVersion: v1
kind: ConfigMap
metadata:
  name: pyflink-config
  namespace: stateflow
  labels:
    app: pyflink
data:
  pyflink-conf.yaml: |+
    jobmanager.rpc.address: pyflink-jobmanager
    taskmanager.numberOfTaskSlots: 5
    blob.server.port: 6124
    jobmanager.rpc.port: 6123
    taskmanager.rpc.port: 6122
    parallelism.default: 20
    execution.checkpointing.interval: 10sec
    execution.checkpointing.mode: AT_LEAST_ONCE
    classloader.parent-first-patterns.additional: org.apache.kafka
    restart-strategy: fixed-delay
    restart-strategy.fixed-delay.attempts: 2147483647
    restart-strategy.fixed-delay.delay: 1sec
    jobmanager.memory.process.size: 1g
    taskmanager.memory.process.size: 8g
    security.kerberos.login.contexts: Client,KafkaClient
    security.kerberos.login.use-ticket-cache: false
    security.kerberos.fetch.delegation-token: false
  log4j.properties: |+
    rootLogger.level = INFO
    rootLogger.appenderRef.console.ref = ConsoleAppender
    rootLogger.appenderRef.rolling.ref = RollingFileAppender
    logger.akka.name = akka
    logger.akka.level = INFO
    logger.kafka.name= org.apache.kafka
    logger.kafka.level = INFO
    logger.hadoop.name = org.apache.hadoop
    logger.hadoop.level = INFO
    logger.zookeeper.name = org.apache.zookeeper
    logger.zookeeper.level = INFO
    appender.console.name = ConsoleAppender
    appender.console.type = CONSOLE
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
    appender.rolling.name = RollingFileAppender
    appender.rolling.type = RollingFile
    appender.rolling.append = false
    appender.rolling.fileName = ${sys:log.file}
    appender.rolling.filePattern = ${sys:log.file}.%i
    appender.rolling.layout.type = PatternLayout
    appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
    appender.rolling.policies.type = Policies
    appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
    appender.rolling.policies.size.size=100MB
    appender.rolling.strategy.type = DefaultRolloverStrategy
    appender.rolling.strategy.max = 10
    logger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline
    logger.netty.level = OFF
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pyflink-jobmanager
  namespace: stateflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pyflink
      component: jobmanager
  template:
    metadata:
      labels:
        app: pyflink
        component: jobmanager
    spec:
      containers:
        - name: jobmanager
          image: wzorgdrager/stateflow-pyflink:0.0.4
          args: ["jobmanager"]
          env:
            - name: JOB_MANAGER_RPC_ADDRESS
              value: pyflink-jobmanager
          ports:
            - containerPort: 6123
              name: rpc
            - containerPort: 6124
              name: blob
            - containerPort: 8081
              name: ui
          resources:
            requests:
              memory: "1024Mi"
              cpu: "750m"
          livenessProbe:
            tcpSocket:
              port: 6123
            initialDelaySeconds: 30
            periodSeconds: 60
          volumeMounts:
            - name: pyflink-config-volume
              mountPath: /opt/flink/conf
          securityContext:
            runAsUser: 9999  # refers to user _flink_ from official pyflink image, change if necessary
      volumes:
        - name: pyflink-config-volume
          configMap:
            name: pyflink-config
            items:
              - key: pyflink-conf.yaml
                path: flink-conf.yaml
              - key: log4j.properties
                path: log4j-console.properties
---
apiVersion: v1
kind: Service
metadata:
  name: pyflink-jobmanager
  namespace: stateflow
spec:
  type: ClusterIP
  ports:
    - name: rpc
      port: 6123
    - name: blob
      port: 6124
    - name: ui
      port: 8081
  selector:
    app: pyflink
    component: jobmanager
---
apiVersion: v1
kind: Service
metadata:
  name: pyflink-jobmanager-rest
  namespace: stateflow
spec:
  type: LoadBalancer
  ports:
    - name: rest
      port: 8081
      targetPort: 8081
  selector:
    app: pyflink
    component: jobmanager